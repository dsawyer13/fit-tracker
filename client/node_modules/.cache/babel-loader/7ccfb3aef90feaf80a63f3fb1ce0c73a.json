{"ast":null,"code":"import _toConsumableArray from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dylan/Desktop/projects/fit-tracker/src/components/AddWorkoutForm.js\";\nimport React from \"react\";\nimport Exercise from \"./Exercise.js\";\nimport TableForm from \"./TableForm.js\";\nimport { Form, Col, Row, Button, InputGroup, Table } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { groupedOptions } from '../data.js';\n\nvar AddWorkoutForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddWorkoutForm, _React$Component);\n\n  function AddWorkoutForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddWorkoutForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddWorkoutForm).call(this, props));\n\n    _this.setEditing = function (editing, index) {\n      _this.setState({\n        exerciseIndex: index,\n        editing: editing\n      });\n    };\n\n    _this.setAdding = function (adding) {\n      _this.setState({\n        adding: adding\n      });\n    };\n\n    _this.displayHead = function () {\n      _this.setState({\n        display: true\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.currentTarget.name, e.currentTarget.value));\n    };\n\n    _this.onSelect = function (optionSelected) {\n      _this.setState({\n        name: optionSelected.value\n      });\n    };\n\n    _this.addWorkout = function (e) {\n      e.preventDefault();\n\n      if (_this.state.exercises && _this.props.onAdd) {\n        console.log(_this.state.exercises);\n\n        _this.props.onAdd(_this.state.exercises);\n      }\n\n      _this.setState({\n        exercises: []\n      });\n    };\n\n    _this.addExercise = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        exercises: [].concat(_toConsumableArray(_this.state.exercises), [{\n          name: _this.state.name,\n          weight: _this.state.weight,\n          sets: _this.state.sets,\n          reps: _this.state.reps\n        }])\n      });\n\n      _this.setState({\n        name: \"\",\n        weight: \"\",\n        sets: \"\",\n        reps: \"\"\n      });\n    };\n\n    _this.editExercise = function (editedExercise, index) {\n      var oldExercise = _this.state.exercises[index];\n\n      _this.setState({\n        oldExercise: editedExercise\n      });\n    };\n\n    _this.deleteExercise = function (index) {\n      var exercises = _this.state.exercises;\n      exercises.splice(index, 1);\n\n      _this.setState({\n        exercises: exercises\n      });\n    };\n\n    _this.state = {\n      adding: false,\n      exercises: [],\n      exerciseIndex: \"\",\n      display: false,\n      editing: false,\n      name: \"\",\n      weight: \"\",\n      sets: \"\",\n      reps: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AddWorkoutForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formatGroupLabel = function formatGroupLabel(data) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, data.label));\n      };\n\n      var exercises = this.state.exercises.map(function (exercise, index) {\n        return React.createElement(React.Fragment, null, _this2.state.editing && index == _this2.state.exerciseIndex ? React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, index + 1), React.createElement(TableForm, {\n          index: index,\n          name: _this2.state.exercises[index].name,\n          weight: _this2.state.exercises[index].weight,\n          sets: _this2.state.exercises[index].sets,\n          reps: _this2.state.exercises[index].reps,\n          onClick: function onClick() {\n            _this2.setEditing(false);\n          },\n          onSubmit: function onSubmit(editedExercise) {\n            _this2.editExercise(editedExercise, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })) : React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, index + 1), React.createElement(Exercise, Object.assign({\n          key: index\n        }, exercise, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"warning\",\n          onClick: function onClick(index) {\n            _this2.setEditing(true, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          variant: \"danger\",\n          onClick: function onClick(index) {\n            return _this2.deleteExercise(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"Delete\"))));\n      });\n\n      if (!this.state.adding) {\n        return React.createElement(\"div\", {\n          className: \"add-workout\",\n          onClick: function onClick() {\n            _this2.setAdding(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"+ New Workout\"));\n      }\n\n      var head;\n\n      if (this.state.display) {\n        head = React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"#\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"Exercise\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \"Weight\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"Sets\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \"Reps\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \"Action\")));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"new-workout-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, head, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, exercises)), React.createElement(Form, {\n        onSubmit: this.addExercise,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Exercise\"), React.createElement(Select, {\n        options: groupedOptions,\n        formatGroupLabel: formatGroupLabel,\n        placeholder: \"Exercise...\",\n        name: \"name\",\n        onChange: this.onSelect,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"number\",\n        name: \"weight\",\n        placeholder: \"Weight\",\n        onChange: this.onChange,\n        value: this.state.weight || \"\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"lbs\"))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Sets\"), React.createElement(Form.Control, {\n        type: \"number\",\n        name: \"sets\",\n        placeholder: \"Sets\",\n        onChange: this.onChange,\n        value: this.state.sets || \"\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Reps\"), React.createElement(Form.Control, {\n        type: \"number\",\n        name: \"reps\",\n        placeholder: \"Reps\",\n        onChange: this.onChange,\n        value: this.state.reps || \"\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.displayHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Add Exercise\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"warning\",\n        className: \"cancel-workout\",\n        onClick: function onClick() {\n          _this2.setAdding(false);\n\n          _this2.setState({\n            exercises: [],\n            name: \"\",\n            weight: \"\",\n            sets: \"\",\n            reps: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Cancel Workout\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        size: \"lg\",\n        block: true,\n        onClick: function onClick(e) {\n          return _this2.addWorkout(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Finish Workout\"))));\n    }\n  }]);\n\n  return AddWorkoutForm;\n}(React.Component);\n\nexport { AddWorkoutForm as default };\nAddWorkoutForm.defaultProps = {\n  name: \"\",\n  weight: \"\",\n  sets: \"\",\n  reps: \"\"\n};","map":{"version":3,"sources":["/home/dylan/Desktop/projects/fit-tracker/src/components/AddWorkoutForm.js"],"names":["React","Exercise","TableForm","Form","Col","Row","Button","InputGroup","Table","Select","groupedOptions","AddWorkoutForm","props","setEditing","editing","index","setState","exerciseIndex","setAdding","adding","displayHead","display","onChange","e","currentTarget","name","value","onSelect","optionSelected","addWorkout","preventDefault","state","exercises","onAdd","console","log","addExercise","weight","sets","reps","editExercise","editedExercise","oldExercise","deleteExercise","splice","formatGroupLabel","data","label","map","exercise","head","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Exercise from \"./Exercise.js\";\nimport TableForm from \"./TableForm.js\";\nimport { Form, Col, Row, Button, InputGroup, Table } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { groupedOptions } from '../data.js';\n\n\n\nexport default class AddWorkoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      adding: false,\n      exercises: [],\n      exerciseIndex: \"\",\n      display: false,\n      editing: false,\n      name: \"\",\n      weight: \"\",\n      sets: \"\",\n      reps: \"\"\n    };\n  }\n\n  setEditing = (editing, index) => {\n    this.setState({\n      exerciseIndex: index,\n      editing,\n    });\n  }\n\n\n  setAdding = adding => {\n    this.setState({\n      adding\n    });\n  }\n\n  displayHead = () => {\n    this.setState({display: true});\n  }\n\n  onChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  }\n\n  onSelect = (optionSelected) => {\n    this.setState({name: optionSelected.value})\n  }\n\n  addWorkout = e => {\n    e.preventDefault();\n    if (this.state.exercises && this.props.onAdd) {\n      console.log(this.state.exercises)\n      this.props.onAdd(this.state.exercises);\n    }\n    this.setState({ exercises: [] });\n  };\n\n  addExercise = e => {\n    e.preventDefault();\n    this.setState({\n      exercises: [\n        ...this.state.exercises,\n        {\n          name: this.state.name,\n          weight: this.state.weight,\n          sets: this.state.sets,\n          reps: this.state.reps\n        }\n      ]\n    });\n    this.setState({ name: \"\", weight: \"\", sets: \"\", reps: \"\" });\n  }\n\n  editExercise = (editedExercise, index) => {\n    const oldExercise = this.state.exercises[index]\n    this.setState({oldExercise: editedExercise})\n  }\n\n  deleteExercise = index => {\n    const exercises = this.state.exercises;\n    exercises.splice(index, 1);\n    this.setState({ exercises: exercises });\n  };\n\n  render() {\n    const formatGroupLabel = data => (\n      <div>\n        <span>{data.label}</span>\n      </div>\n    );\n\n    const exercises = this.state.exercises.map((exercise, index) => {\n      return (\n        <>\n        {this.state.editing && index == this.state.exerciseIndex ? (\n          <tr key={index}>\n            <td>{index+1}</td>\n            <TableForm\n              index={index}\n              name={this.state.exercises[index].name}\n              weight={this.state.exercises[index].weight}\n              sets={this.state.exercises[index].sets}\n              reps={this.state.exercises[index].reps}\n              onClick={() => {this.setEditing(false)}}\n              onSubmit={(editedExercise) => {this.editExercise(editedExercise, index)}}\n            />\n          </tr>\n            ) : (\n            <tr key={index}>\n            <td>{index+1}</td>\n            <Exercise  key={index} {...exercise} />\n            <td>\n            <Button variant=\"warning\" onClick={(index) => {this.setEditing(true, index)}}>\n              Edit\n            </Button>\n            <Button variant=\"danger\" onClick={index => this.deleteExercise(index)}>\n              Delete\n            </Button>\n            </td>\n          </tr>\n\n          )}\n          </>\n          )\n      });\n\n    if (!this.state.adding) {\n      return (\n        <div\n          className=\"add-workout\"\n          onClick={() => {\n            this.setAdding(true);\n          }}\n        >\n          <Button variant=\"success\">+ New Workout</Button>\n        </div>\n      );\n    }\n    let head;\n\n    if (this.state.display) {\n      head = (\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Exercise</th>\n            <th>Weight</th>\n            <th>Sets</th>\n            <th>Reps</th>\n            <th>Action</th>\n          </tr>\n        </thead>)\n    }\n\n    return (\n      <div className=\"new-workout-section\">\n        <Table striped bordered hover responsive>\n          {head}\n          <tbody>\n            {exercises}\n          </tbody>\n        </Table>\n        <Form onSubmit={this.addExercise}>\n          <Row>\n            <Col>\n              <Form.Group>\n              <Form.Label>Exercise</Form.Label>\n                <Select\n                  options={groupedOptions}\n                  formatGroupLabel={formatGroupLabel}\n                  placeholder=\"Exercise...\"\n                  name=\"name\"\n                  onChange={this.onSelect}\n                  required\n                 />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Weight</Form.Label>\n                <InputGroup>\n                  <Form.Control type=\"number\" name=\"weight\" placeholder=\"Weight\" onChange={this.onChange} value={this.state.weight || \"\"} required />\n                  <InputGroup.Append>\n                    <InputGroup.Text id=\"inputGroupPrepend\">lbs</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Sets</Form.Label>\n                <Form.Control type=\"number\" name=\"sets\" placeholder=\"Sets\" onChange={this.onChange} value={this.state.sets || \"\"} required />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Reps</Form.Label>\n                <Form.Control type=\"number\" name=\"reps\" placeholder=\"Reps\" onChange={this.onChange} value={this.state.reps || \"\"} required />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Button variant=\"primary\" type=\"submit\" onClick={this.displayHead}>\n                Add Exercise\n              </Button>\n            </Col>\n            <Col>\n              <Button variant=\"warning\"\n                className=\"cancel-workout\"\n                onClick={() => {\n                  this.setAdding(false);\n                  this.setState({\n                     exercises: [],\n                     name: \"\",\n                     weight: \"\",\n                     sets: \"\",\n                     reps: \"\"\n                   });\n                }}\n              >\n                Cancel Workout\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Button variant=\"primary\" size=\"lg\" block onClick={(e) => this.addWorkout(e)}>\n              Finish Workout\n            </Button>\n          </Row>\n        </Form>\n        </div>\n\n\n    );\n  }\n}\n\nAddWorkoutForm.defaultProps = {\n  name: \"\",\n  weight: \"\",\n  sets: \"\",\n  reps: \"\"\n};\n"]},"metadata":{},"sourceType":"module"}
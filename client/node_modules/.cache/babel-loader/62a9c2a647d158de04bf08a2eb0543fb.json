{"ast":null,"code":"import _toConsumableArray from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dylan/Desktop/projects/fit-tracker/src/components/AddWorkoutForm.js\";\nimport React from \"react\";\nimport Exercise from \"./Exercise.js\";\nimport { Form, Col, Row, Button, InputGroup } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { groupedOptions } from '../data.js'; // shoulderOptions,\n// chestOptions,\n// legOptions,\n// backOptions,\n// bicepsOptions,\n// tricepsOptions,\n// absOptions\n\nvar AddWorkoutForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddWorkoutForm, _React$Component);\n\n  function AddWorkoutForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddWorkoutForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddWorkoutForm).call(this, props));\n\n    _this.setEditing = function (editing) {\n      _this.setState({\n        editing: editing\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.currentTarget.name, e.currentTarget.value));\n    };\n\n    _this.onSelect = function (optionSelected) {\n      alert(optionSelected.value);\n    };\n\n    _this.addWorkout = function (e) {\n      e.preventDefault();\n\n      if (_this.state.exercises && _this.props.onAdd) {\n        _this.props.onAdd(_this.state.exercises);\n      }\n\n      _this.setState({\n        exercises: []\n      });\n    };\n\n    _this.addExercise = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        exercises: [].concat(_toConsumableArray(_this.state.exercises), [{\n          name: _this.state.name,\n          weight: _this.state.weight,\n          sets: _this.state.sets,\n          reps: _this.state.reps\n        }])\n      });\n\n      _this.setState({\n        name: \"\",\n        weight: \"\",\n        sets: \"\",\n        reps: \"\"\n      });\n    };\n\n    _this.deleteExercise = function (index) {\n      var exercises = _this.state.exercises;\n      exercises.splice(index, 1);\n\n      _this.setState({\n        exercises: exercises\n      });\n    };\n\n    _this.state = {\n      editing: false,\n      exercises: []\n    };\n    return _this;\n  }\n\n  _createClass(AddWorkoutForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formatGroupLabel = function formatGroupLabel(data) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, data.label), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, data.options.length));\n      };\n\n      var exercises = this.state.exercises.map(function (exercise, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Exercise, Object.assign({}, exercise, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), React.createElement(\"input\", {\n          type: \"button\",\n          value: \"delete\",\n          onClick: function onClick(index) {\n            return _this2.deleteExercise(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }));\n      });\n\n      if (!this.state.editing) {\n        return React.createElement(\"div\", {\n          className: \"add-workout\",\n          onClick: function onClick() {\n            _this2.setEditing(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"+ New Workout\"));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"new-workout-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cancel-workout\",\n        onClick: function onClick() {\n          _this2.setEditing(false);\n\n          _this2.setState({\n            exercises: []\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(\"ul\", {\n        className: \"exercise-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, exercises), React.createElement(Form, {\n        onSubmit: this.addExercise,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Select, {\n        options: groupedOptions,\n        formatGroupLabel: formatGroupLabel,\n        placeholder: \"Exercise...\",\n        name: \"name\",\n        onSelect: this.onSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"weight\",\n        placeholder: \"Weight\",\n        onChange: this.onChange,\n        value: this.state.weight || \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"lbs\"))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Sets\"), React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"sets\",\n        placeholder: \"Sets\",\n        onChange: this.onChange,\n        value: this.state.sets || \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Reps\"), React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"reps\",\n        placeholder: \"Reps\",\n        onChange: this.onChange,\n        value: this.state.reps || \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Add Exercise\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        size: \"lg\",\n        block: true,\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Finish Workout\"))));\n    }\n  }]);\n\n  return AddWorkoutForm;\n}(React.Component);\n\nexport { AddWorkoutForm as default };\nAddWorkoutForm.defaultProps = {\n  name: \"\",\n  weight: \"\",\n  sets: \"\",\n  reps: \"\"\n};","map":{"version":3,"sources":["/home/dylan/Desktop/projects/fit-tracker/src/components/AddWorkoutForm.js"],"names":["React","Exercise","Form","Col","Row","Button","InputGroup","Select","groupedOptions","AddWorkoutForm","props","setEditing","editing","setState","onChange","e","currentTarget","name","value","onSelect","optionSelected","alert","addWorkout","preventDefault","state","exercises","onAdd","addExercise","weight","sets","reps","deleteExercise","index","splice","formatGroupLabel","data","label","options","length","map","exercise","onSubmit","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Exercise from \"./Exercise.js\";\nimport { Form, Col, Row, Button, InputGroup } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { groupedOptions } from '../data.js';\n\n// shoulderOptions,\n// chestOptions,\n// legOptions,\n// backOptions,\n// bicepsOptions,\n// tricepsOptions,\n// absOptions\n\nexport default class AddWorkoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n      exercises: []\n    };\n  }\n\n\n  setEditing = editing => {\n    this.setState({\n      editing\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  onSelect = (optionSelected) => {\n    alert(optionSelected.value)\n\n  }\n\n  addWorkout = e => {\n    e.preventDefault();\n    if (this.state.exercises && this.props.onAdd) {\n      this.props.onAdd(this.state.exercises);\n    }\n    this.setState({ exercises: [] });\n  };\n\n  addExercise = e => {\n    e.preventDefault();\n    this.setState({\n      exercises: [\n        ...this.state.exercises,\n        {\n          name: this.state.name,\n          weight: this.state.weight,\n          sets: this.state.sets,\n          reps: this.state.reps\n        }\n      ]\n    });\n    this.setState({ name: \"\", weight: \"\", sets: \"\", reps: \"\" });\n  };\n\n  deleteExercise = index => {\n    const exercises = this.state.exercises;\n    exercises.splice(index, 1);\n    this.setState({ exercises: exercises });\n  };\n\n  render() {\n    const formatGroupLabel = data => (\n      <div>\n        <span>{data.label}</span>\n        <span>{data.options.length}</span>\n      </div>\n    );\n\n    const exercises = this.state.exercises.map((exercise, index) => (\n      <li key={index}>\n        <Exercise {...exercise} />\n        <input\n          type=\"button\"\n          value=\"delete\"\n          onClick={index => this.deleteExercise(index)}\n        />\n      </li>\n    ));\n\n    if (!this.state.editing) {\n      return (\n        <div\n          className=\"add-workout\"\n          onClick={() => {\n            this.setEditing(true);\n          }}\n        >\n          <button>+ New Workout</button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"new-workout-section\">\n        <div\n          className=\"cancel-workout\"\n          onClick={() => {\n            this.setEditing(false);\n            this.setState({ exercises: [] });\n          }}\n        >\n          <button>Cancel</button>\n        </div>\n\n        <ul className=\"exercise-list\">{exercises}</ul>\n\n        <Form onSubmit={this.addExercise}>\n          <Row>\n            <Col>\n              <Form.Group>\n                <Select\n                  options={groupedOptions}\n                  formatGroupLabel={formatGroupLabel}\n                  placeholder=\"Exercise...\"\n                  name=\"name\"\n                  onSelect={this.onSelect}\n                 />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Weight</Form.Label>\n                <InputGroup>\n                  <Form.Control type=\"text\" name=\"weight\" placeholder=\"Weight\" onChange={this.onChange} value={this.state.weight || \"\"} />\n                  <InputGroup.Append>\n                    <InputGroup.Text id=\"inputGroupPrepend\">lbs</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Sets</Form.Label>\n                <Form.Control type=\"text\" name=\"sets\" placeholder=\"Sets\" onChange={this.onChange} value={this.state.sets || \"\"} />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Reps</Form.Label>\n                <Form.Control type=\"text\" name=\"reps\" placeholder=\"Reps\" onChange={this.onChange} value={this.state.reps || \"\"} />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Button variant=\"primary\" type=\"submit\">\n                Add Exercise\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Button variant=\"primary\" size=\"lg\" block onClick={this.onSubmit}>\n              Finish Workout\n            </Button>\n          </Row>\n        </Form>\n        </div>\n\n\n    );\n  }\n}\n\nAddWorkoutForm.defaultProps = {\n  name: \"\",\n  weight: \"\",\n  sets: \"\",\n  reps: \"\"\n};\n"]},"metadata":{},"sourceType":"module"}
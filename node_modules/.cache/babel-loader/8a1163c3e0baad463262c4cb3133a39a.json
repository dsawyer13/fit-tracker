{"ast":null,"code":"import _toConsumableArray from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dylan/Desktop/projects/fit-tracker/src/components/AddWorkoutForm.js\";\nimport React from \"react\";\nimport Exercise from \"./Exercise.js\";\nimport TableForm from \"./TableForm.js\";\nimport { Form, Col, Row, Button, InputGroup, Table } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { groupedOptions } from '../data.js';\n\nvar AddWorkoutForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddWorkoutForm, _React$Component);\n\n  function AddWorkoutForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddWorkoutForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddWorkoutForm).call(this, props));\n\n    _this.setAdding = function (adding) {\n      _this.setState({\n        adding: adding\n      });\n    };\n\n    _this.displayHead = function () {\n      _this.setState({\n        display: true\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.currentTarget.name, e.currentTarget.value));\n    };\n\n    _this.onSelect = function (optionSelected) {\n      _this.setState({\n        name: optionSelected.label\n      });\n    };\n\n    _this.addWorkout = function (e) {\n      e.preventDefault();\n\n      if (_this.state.exercises && _this.props.onAdd) {\n        _this.props.onAdd(_this.state.exercises);\n      }\n\n      _this.setState({\n        exercises: []\n      });\n    };\n\n    _this.addExercise = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        exercises: [].concat(_toConsumableArray(_this.state.exercises), [{\n          name: _this.state.name,\n          weight: _this.state.weight,\n          sets: _this.state.sets,\n          reps: _this.state.reps\n        }])\n      });\n\n      _this.setState({\n        name: \"\",\n        weight: \"\",\n        sets: \"\",\n        reps: \"\"\n      });\n    };\n\n    _this.deleteExercise = function (index) {\n      var exercises = _this.state.exercises;\n      exercises.splice(index, 1);\n\n      _this.setState({\n        exercises: exercises\n      });\n    };\n\n    _this.editExercise = function (index) {\n      _this.setState({\n        editing: !_this.state.editing,\n        clickedExercise: index\n      });\n    };\n\n    _this.state = {\n      adding: false,\n      exercises: [],\n      display: false,\n      editing: false\n    };\n    return _this;\n  }\n\n  _createClass(AddWorkoutForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formatGroupLabel = function formatGroupLabel(data) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, data.label));\n      }; // const exercises = this.state.exercises.map((exercise, index) => {\n      //   if (!this.state.editing) {\n      //     return (\n      //       <tr className=\"exercise\">\n      //         <td>{index+1}</td>\n      //         <Exercise  key={index} {...exercise} />\n      //         <Button variant=\"warning\" onClick={index => this.editExercise(index)}>\n      //           Edit\n      //         </Button>\n      //         <Button variant=\"danger\" onClick={index => this.deleteExercise(index)}>\n      //           Delete\n      //         </Button>\n      //       </tr>\n      //     )} else if(this.state.editing && this.state.clickedExercise === index) {\n      //       return (\n      //         <TableForm />\n      //       )\n      //     }\n      //   });\n\n\n      var exercises = this.state.exercises.map(function (exercise, index) {\n        return React.createElement(React.Fragment, null, !_this2.state.editing && React.createElement(\"tr\", {\n          className: \"exercise\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, index + 1), React.createElement(Exercise, Object.assign({\n          key: index\n        }, exercise, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        })), React.createElement(Button, {\n          variant: \"warning\",\n          onClick: function onClick(index) {\n            return _this2.editExercise(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          variant: \"danger\",\n          onClick: function onClick(index) {\n            return _this2.deleteExercise(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Delete\")), _this2.state.editing && React.createElement(React.Fragment, null, React.createElement(TableForm, {\n          name: _this2.state.name,\n          weight: _this2.state.weight,\n          sets: _this2.state.sets,\n          reps: _this2.state.reps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        })));\n      });\n\n      if (!this.state.adding) {\n        return React.createElement(\"div\", {\n          className: \"add-workout\",\n          onClick: function onClick() {\n            _this2.setAdding(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"+ New Workout\"));\n      }\n\n      var head;\n\n      if (this.state.display) {\n        head = React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"#\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Exercise\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Weight\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Sets\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"Reps\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \"Action\")));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"new-workout-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, head, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, exercises)), React.createElement(Form, {\n        onSubmit: this.addExercise,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Exercise\"), React.createElement(Select, {\n        options: groupedOptions,\n        formatGroupLabel: formatGroupLabel,\n        placeholder: \"Exercise...\",\n        name: \"name\",\n        onChange: this.onSelect,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"number\",\n        name: \"weight\",\n        placeholder: \"Weight\",\n        onChange: this.onChange,\n        value: this.state.weight || \"\",\n        required: true,\n        oninput: \"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\",\n        maxlength: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"lbs\"))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Sets\"), React.createElement(Form.Control, {\n        type: \"number\",\n        name: \"sets\",\n        placeholder: \"Sets\",\n        onChange: this.onChange,\n        value: this.state.sets || \"\",\n        required: true,\n        oninput: \"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\",\n        maxlength: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Reps\"), React.createElement(Form.Control, {\n        type: \"number\",\n        name: \"reps\",\n        placeholder: \"Reps\",\n        onChange: this.onChange,\n        value: this.state.reps || \"\",\n        required: true,\n        oninput: \"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\",\n        maxlength: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.displayHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Add Exercise\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"warning\",\n        className: \"cancel-workout\",\n        onClick: function onClick() {\n          _this2.setEditing(false);\n\n          _this2.setState({\n            exercises: [],\n            name: \"\",\n            weight: \"\",\n            sets: \"\",\n            reps: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Cancel Workout\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        size: \"lg\",\n        block: true,\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Finish Workout\"))));\n    }\n  }]);\n\n  return AddWorkoutForm;\n}(React.Component);\n\nexport { AddWorkoutForm as default };\nAddWorkoutForm.defaultProps = {\n  name: \"\",\n  weight: \"\",\n  sets: \"\",\n  reps: \"\"\n};","map":{"version":3,"sources":["/home/dylan/Desktop/projects/fit-tracker/src/components/AddWorkoutForm.js"],"names":["React","Exercise","TableForm","Form","Col","Row","Button","InputGroup","Table","Select","groupedOptions","AddWorkoutForm","props","setAdding","adding","setState","displayHead","display","onChange","e","currentTarget","name","value","onSelect","optionSelected","label","addWorkout","preventDefault","state","exercises","onAdd","addExercise","weight","sets","reps","deleteExercise","index","splice","editExercise","editing","clickedExercise","formatGroupLabel","data","map","exercise","head","setEditing","onSubmit","Component","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,UAAjC,EAA6CC,KAA7C,QAA0D,iBAA1D;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,QAA+B,YAA/B;;IAGqBC,c;;;;;AACnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;;AADiB,UAWnBC,SAXmB,GAWP,UAAAC,MAAM,EAAI;AACpB,YAAKC,QAAL,CAAc;AACZD,QAAAA,MAAM,EAANA;AADY,OAAd;AAGD,KAfkB;;AAAA,UAiBnBE,WAjBmB,GAiBL,YAAM;AAClB,YAAKD,QAAL,CAAc;AAACE,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAnBkB;;AAAA,UAqBnBC,QArBmB,GAqBR,UAAAC,CAAC,EAAI;AACd,YAAKJ,QAAL,qBAAiBI,CAAC,CAACC,aAAF,CAAgBC,IAAjC,EAAwCF,CAAC,CAACC,aAAF,CAAgBE,KAAxD;AACD,KAvBkB;;AAAA,UAyBnBC,QAzBmB,GAyBR,UAACC,cAAD,EAAoB;AAC7B,YAAKT,QAAL,CAAc;AAACM,QAAAA,IAAI,EAAEG,cAAc,CAACC;AAAtB,OAAd;AACD,KA3BkB;;AAAA,UA6BnBC,UA7BmB,GA6BN,UAAAP,CAAC,EAAI;AAChBA,MAAAA,CAAC,CAACQ,cAAF;;AACA,UAAI,MAAKC,KAAL,CAAWC,SAAX,IAAwB,MAAKjB,KAAL,CAAWkB,KAAvC,EAA8C;AAC5C,cAAKlB,KAAL,CAAWkB,KAAX,CAAiB,MAAKF,KAAL,CAAWC,SAA5B;AACD;;AACD,YAAKd,QAAL,CAAc;AAAEc,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAnCkB;;AAAA,UAqCnBE,WArCmB,GAqCL,UAAAZ,CAAC,EAAI;AACjBA,MAAAA,CAAC,CAACQ,cAAF;;AACA,YAAKZ,QAAL,CAAc;AACZc,QAAAA,SAAS,+BACJ,MAAKD,KAAL,CAAWC,SADP,IAEP;AACER,UAAAA,IAAI,EAAE,MAAKO,KAAL,CAAWP,IADnB;AAEEW,UAAAA,MAAM,EAAE,MAAKJ,KAAL,CAAWI,MAFrB;AAGEC,UAAAA,IAAI,EAAE,MAAKL,KAAL,CAAWK,IAHnB;AAIEC,UAAAA,IAAI,EAAE,MAAKN,KAAL,CAAWM;AAJnB,SAFO;AADG,OAAd;;AAWA,YAAKnB,QAAL,CAAc;AAAEM,QAAAA,IAAI,EAAE,EAAR;AAAYW,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAAd;AACD,KAnDkB;;AAAA,UAqDnBC,cArDmB,GAqDF,UAAAC,KAAK,EAAI;AACxB,UAAMP,SAAS,GAAG,MAAKD,KAAL,CAAWC,SAA7B;AACAA,MAAAA,SAAS,CAACQ,MAAV,CAAiBD,KAAjB,EAAwB,CAAxB;;AACA,YAAKrB,QAAL,CAAc;AAAEc,QAAAA,SAAS,EAAEA;AAAb,OAAd;AACD,KAzDkB;;AAAA,UA2DnBS,YA3DmB,GA2DJ,UAAAF,KAAK,EAAI;AACtB,YAAKrB,QAAL,CAAc;AAACwB,QAAAA,OAAO,EAAE,CAAC,MAAKX,KAAL,CAAWW,OAAtB;AAA+BC,QAAAA,eAAe,EAAEJ;AAAhD,OAAd;AACD,KA7DkB;;AAEjB,UAAKR,KAAL,GAAa;AACXd,MAAAA,MAAM,EAAE,KADG;AAEXe,MAAAA,SAAS,EAAE,EAFA;AAGXZ,MAAAA,OAAO,EAAE,KAHE;AAIXsB,MAAAA,OAAO,EAAE;AAJE,KAAb;AAFiB;AAQlB;;;;6BAuDQ;AAAA;;AACP,UAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,IAAI;AAAA,eAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,IAAI,CAACjB,KAAZ,CADF,CAD2B;AAAA,OAA7B,CADO,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,UAAMI,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAAX,CAAqBc,GAArB,CAAyB,UAACC,QAAD,EAAWR,KAAX,EAAqB;AAC9D,eACE,0CACG,CAAC,MAAI,CAACR,KAAL,CAAWW,OAAZ,IAAuB;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,KAAK,GAAC,CAAX,CADsB,EAEtB,oBAAC,QAAD;AAAW,UAAA,GAAG,EAAEA;AAAhB,WAA2BQ,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFsB,EAGtB,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE,iBAAAR,KAAK;AAAA,mBAAI,MAAI,CAACE,YAAL,CAAkBF,KAAlB,CAAJ;AAAA,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHsB,EAMtB,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAE,iBAAAA,KAAK;AAAA,mBAAI,MAAI,CAACD,cAAL,CAAoBC,KAApB,CAAJ;AAAA,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANsB,CAD1B,EAWG,MAAI,CAACR,KAAL,CAAWW,OAAX,IACC,0CACA,oBAAC,SAAD;AACE,UAAA,IAAI,EAAE,MAAI,CAACX,KAAL,CAAWP,IADnB;AAEE,UAAA,MAAM,EAAE,MAAI,CAACO,KAAL,CAAWI,MAFrB;AAGE,UAAA,IAAI,EAAE,MAAI,CAACJ,KAAL,CAAWK,IAHnB;AAIE,UAAA,IAAI,EAAE,MAAI,CAACL,KAAL,CAAWM,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CAZJ,CADF;AAwBD,OAzBiB,CAAlB;;AA2BA,UAAI,CAAC,KAAKN,KAAL,CAAWd,MAAhB,EAAwB;AACtB,eACE;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACD,SAAL,CAAe,IAAf;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANF,CADF;AAUD;;AACD,UAAIgC,IAAJ;;AAEA,UAAI,KAAKjB,KAAL,CAAWX,OAAf,EAAwB;AACtB4B,QAAAA,IAAI,GACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,CADF;AAWD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhB,SADH,CAFF,CADF,EAOE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKE,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAErB,cADX;AAEE,QAAA,gBAAgB,EAAE+B,gBAFpB;AAGE,QAAA,WAAW,EAAC,aAHd;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,QAAQ,EAAE,KAAKlB,QALjB;AAME,QAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,EAcE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAA0C,QAAA,WAAW,EAAC,QAAtD;AAA+D,QAAA,QAAQ,EAAE,KAAKL,QAA9E;AAAwF,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWI,MAAX,IAAqB,EAApH;AAAwH,QAAA,QAAQ,MAAhI;AACE,QAAA,OAAO,EAAC,uGADV;AAEE,QAAA,SAAS,EAAC,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,UAAD,CAAY,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,EAAE,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAJF,CAFF,CADF,CAdF,EA2BE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,MAAjC;AAAwC,QAAA,WAAW,EAAC,MAApD;AAA2D,QAAA,QAAQ,EAAE,KAAKd,QAA1E;AAAoF,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWK,IAAX,IAAmB,EAA9G;AAAkH,QAAA,QAAQ,MAA1H;AACE,QAAA,OAAO,EAAC,uGADV;AAEE,QAAA,SAAS,EAAC,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CA3BF,EAmCE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,MAAjC;AAAwC,QAAA,WAAW,EAAC,MAApD;AAA2D,QAAA,QAAQ,EAAE,KAAKf,QAA1E;AAAoF,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWM,IAAX,IAAmB,EAA9G;AAAkH,QAAA,QAAQ,MAA1H;AACE,QAAA,OAAO,EAAC,uGADV;AAEE,QAAA,SAAS,EAAC,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CAnCF,EA2CE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,OAAO,EAAE,KAAKlB,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CA3CF,EAgDE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAAC8B,UAAL,CAAgB,KAAhB;;AACA,UAAA,MAAI,CAAC/B,QAAL,CAAc;AACXc,YAAAA,SAAS,EAAE,EADA;AAEXR,YAAAA,IAAI,EAAE,EAFK;AAGXW,YAAAA,MAAM,EAAE,EAHG;AAIXC,YAAAA,IAAI,EAAE,EAJK;AAKXC,YAAAA,IAAI,EAAE;AALK,WAAd;AAOD,SAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAhDF,CADF,EAmEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,IAA/B;AAAoC,QAAA,KAAK,MAAzC;AAA0C,QAAA,OAAO,EAAE,KAAKa,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAnEF,CAPF,CADF;AAqFD;;;;EAvOyC/C,KAAK,CAACgD,S;;SAA7BrC,c;AA0OrBA,cAAc,CAACsC,YAAf,GAA8B;AAC5B5B,EAAAA,IAAI,EAAE,EADsB;AAE5BW,EAAAA,MAAM,EAAE,EAFoB;AAG5BC,EAAAA,IAAI,EAAE,EAHsB;AAI5BC,EAAAA,IAAI,EAAE;AAJsB,CAA9B","sourcesContent":["import React from \"react\";\nimport Exercise from \"./Exercise.js\";\nimport TableForm from \"./TableForm.js\";\nimport { Form, Col, Row, Button, InputGroup, Table } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { groupedOptions } from '../data.js';\n\n\nexport default class AddWorkoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      adding: false,\n      exercises: [],\n      display: false,\n      editing: false\n    };\n  }\n\n\n  setAdding = adding => {\n    this.setState({\n      adding\n    });\n  };\n\n  displayHead = () => {\n    this.setState({display: true});\n  }\n\n  onChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  onSelect = (optionSelected) => {\n    this.setState({name: optionSelected.label})\n  }\n\n  addWorkout = e => {\n    e.preventDefault();\n    if (this.state.exercises && this.props.onAdd) {\n      this.props.onAdd(this.state.exercises);\n    }\n    this.setState({ exercises: [] });\n  };\n\n  addExercise = e => {\n    e.preventDefault();\n    this.setState({\n      exercises: [\n        ...this.state.exercises,\n        {\n          name: this.state.name,\n          weight: this.state.weight,\n          sets: this.state.sets,\n          reps: this.state.reps\n        }\n      ]\n    });\n    this.setState({ name: \"\", weight: \"\", sets: \"\", reps: \"\" });\n  };\n\n  deleteExercise = index => {\n    const exercises = this.state.exercises;\n    exercises.splice(index, 1);\n    this.setState({ exercises: exercises });\n  };\n\n  editExercise = index => {\n    this.setState({editing: !this.state.editing, clickedExercise: index});\n  }\n\n  render() {\n    const formatGroupLabel = data => (\n      <div>\n        <span>{data.label}</span>\n      </div>\n    );\n\n    // const exercises = this.state.exercises.map((exercise, index) => {\n    //   if (!this.state.editing) {\n    //     return (\n    //       <tr className=\"exercise\">\n    //         <td>{index+1}</td>\n    //         <Exercise  key={index} {...exercise} />\n    //         <Button variant=\"warning\" onClick={index => this.editExercise(index)}>\n    //           Edit\n    //         </Button>\n    //         <Button variant=\"danger\" onClick={index => this.deleteExercise(index)}>\n    //           Delete\n    //         </Button>\n    //       </tr>\n    //     )} else if(this.state.editing && this.state.clickedExercise === index) {\n    //       return (\n    //         <TableForm />\n    //       )\n    //     }\n    //   });\n\n    const exercises = this.state.exercises.map((exercise, index) => {\n      return (\n        <>\n          {!this.state.editing && <tr className=\"exercise\">\n            <td>{index+1}</td>\n            <Exercise  key={index} {...exercise} />\n            <Button variant=\"warning\" onClick={index => this.editExercise(index)}>\n              Edit\n            </Button>\n            <Button variant=\"danger\" onClick={index => this.deleteExercise(index)}>\n              Delete\n            </Button>\n          </tr>}\n          {this.state.editing &&\n            <>\n            <TableForm\n              name={this.state.name}\n              weight={this.state.weight}\n              sets={this.state.sets}\n              reps={this.state.reps}\n              />\n            </>\n           }\n        </>\n      )\n    })\n\n    if (!this.state.adding) {\n      return (\n        <div\n          className=\"add-workout\"\n          onClick={() => {\n            this.setAdding(true);\n          }}\n        >\n          <Button variant=\"success\">+ New Workout</Button>\n        </div>\n      );\n    }\n    let head;\n\n    if (this.state.display) {\n      head = (\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Exercise</th>\n            <th>Weight</th>\n            <th>Sets</th>\n            <th>Reps</th>\n            <th>Action</th>\n          </tr>\n        </thead>)\n    }\n\n    return (\n      <div className=\"new-workout-section\">\n        <Table striped bordered hover>\n          {head}\n          <tbody>\n            {exercises}\n          </tbody>\n        </Table>\n        <Form onSubmit={this.addExercise}>\n          <Row>\n            <Col>\n              <Form.Group>\n              <Form.Label>Exercise</Form.Label>\n                <Select\n                  options={groupedOptions}\n                  formatGroupLabel={formatGroupLabel}\n                  placeholder=\"Exercise...\"\n                  name=\"name\"\n                  onChange={this.onSelect}\n                  required\n                 />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Weight</Form.Label>\n                <InputGroup>\n                  <Form.Control type=\"number\" name=\"weight\" placeholder=\"Weight\" onChange={this.onChange} value={this.state.weight || \"\"} required\n                    oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"\n                    maxlength=\"5\"/>\n                  <InputGroup.Append>\n                    <InputGroup.Text id=\"inputGroupPrepend\">lbs</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Sets</Form.Label>\n                <Form.Control type=\"number\" name=\"sets\" placeholder=\"Sets\" onChange={this.onChange} value={this.state.sets || \"\"} required\n                  oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"\n                  maxlength=\"5\" />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Reps</Form.Label>\n                <Form.Control type=\"number\" name=\"reps\" placeholder=\"Reps\" onChange={this.onChange} value={this.state.reps || \"\"} required\n                  oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"\n                  maxlength=\"5\"/>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Button variant=\"primary\" type=\"submit\" onClick={this.displayHead}>\n                Add Exercise\n              </Button>\n            </Col>\n            <Col>\n              <Button variant=\"warning\"\n                className=\"cancel-workout\"\n                onClick={() => {\n                  this.setEditing(false);\n                  this.setState({\n                     exercises: [],\n                     name: \"\",\n                     weight: \"\",\n                     sets: \"\",\n                     reps: \"\"\n                   });\n                }}\n              >\n                Cancel Workout\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Button variant=\"primary\" size=\"lg\" block onClick={this.onSubmit}>\n              Finish Workout\n            </Button>\n          </Row>\n        </Form>\n        </div>\n\n\n    );\n  }\n}\n\nAddWorkoutForm.defaultProps = {\n  name: \"\",\n  weight: \"\",\n  sets: \"\",\n  reps: \"\"\n};\n"]},"metadata":{},"sourceType":"module"}
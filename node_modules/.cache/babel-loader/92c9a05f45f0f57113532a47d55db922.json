{"ast":null,"code":"import _classCallCheck from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dylan/Desktop/projects/fit-tracker/src/components/Workout.js\";\nimport React from \"react\";\nimport format from \"date-fns/format\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { deleteWorkout, addExercise } from \"../actions\";\nexport var Workout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Workout, _React$Component);\n\n  function Workout(props) {\n    var _this;\n\n    _classCallCheck(this, Workout);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Workout).call(this, props));\n\n    _this.deleteWorkout = function (e) {\n      _this.props.dispatch(deleteWorkout(_this.state.workouts.props.id));\n    };\n\n    _this.state = {\n      name: \"\",\n      weight: \"\",\n      sets: \"\",\n      reps: \"\",\n      workouts: _this.props\n    };\n    return _this;\n  } // componentWillUpdate(prevProps) {\n  //   console.log(prevProps, this.props)\n  //   if(this.props.workouts !== prevProps.workouts) {\n  //     let workouts = this.props.workouts\n  //     this.setState({\n  //       workouts\n  //     })\n  //   }\n  // }\n\n\n  _createClass(Workout, [{\n    key: \"render\",\n    //\n    // addExercise(id, exercise) {\n    //   this.props.dispatch(addExercise(this.props.id, this.state));\n    // }\n    value: function render() {\n      console.log(this.state.workouts);\n      var exerciseNum = this.state.workouts.exercises.length;\n      var date = format(new Date(this.state.workouts.date), \"MM/DD/YYYY\"); // console.log(exerciseNum)\n      // console.log(date)\n\n      function sumArray(arr, field) {\n        var sum = 0;\n\n        for (var i = 0; i < arr.length; i++) {\n          sum += arr[i][field];\n        }\n\n        return sum;\n      }\n\n      var setsNum = sumArray(this.state.workouts.exercises, 'sets');\n      var repsNum = sumArray(this.state.workouts.exercises, 'reps');\n      return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, date, \" \"), React.createElement(\"span\", {\n        className: \"exerciseNum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, exerciseNum, \" exercises \"), React.createElement(\"span\", {\n        className: \"setsNum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, setsNum, \" total sets \"), React.createElement(\"span\", {\n        className: \"repsNum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, repsNum, \" total reps \"), React.createElement(Button, {\n        variant: \"danger\",\n        onClick: this.deleteWorkout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }]);\n\n  return Workout;\n}(React.Component);\nWorkout.defaultProps = {\n  workouts: []\n};\nexport default connect()(Workout);","map":{"version":3,"sources":["/home/dylan/Desktop/projects/fit-tracker/src/components/Workout.js"],"names":["React","format","connect","Button","deleteWorkout","addExercise","Workout","props","e","dispatch","state","workouts","id","name","weight","sets","reps","console","log","exerciseNum","exercises","length","date","Date","sumArray","arr","field","sum","i","setsNum","repsNum","Component","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA4C,YAA5C;AAEA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AACE,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAuBnBH,aAvBmB,GAuBH,UAAAI,CAAC,EAAI;AACnB,YAAKD,KAAL,CAAWE,QAAX,CAAoBL,aAAa,CAAC,MAAKM,KAAL,CAAWC,QAAX,CAAoBJ,KAApB,CAA0BK,EAA3B,CAAjC;AACD,KAzBkB;;AAEjB,UAAKF,KAAL,GAAa;AACXG,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,IAAI,EAAE,EAJK;AAKXL,MAAAA,QAAQ,EAAE,MAAKJ;AALJ,KAAb;AAFiB;AASlB,GAVH,CAcE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAtBF;AAAA;AA2BE;AACA;AACA;AACA;AA9BF,6BAgCW;AACPU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,QAAvB;AACA,UAAMQ,WAAW,GAAG,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,SAApB,CAA8BC,MAAlD;AACA,UAAMC,IAAI,GAAGrB,MAAM,CAAC,IAAIsB,IAAJ,CAAS,KAAKb,KAAL,CAAWC,QAAX,CAAoBW,IAA7B,CAAD,EAAqC,YAArC,CAAnB,CAHO,CAIP;AACA;;AACA,eAASE,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5B,YAAIC,GAAG,GAAG,CAAV;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACH,GAAG,CAACJ,MAAtB,EAA8BO,CAAC,EAA/B,EAAmC;AACjCD,UAAAA,GAAG,IAAIF,GAAG,CAACG,CAAD,CAAH,CAAOF,KAAP,CAAP;AACD;;AACD,eAAOC,GAAP;AACD;;AACD,UAAIE,OAAO,GAAGL,QAAQ,CAAC,KAAKd,KAAL,CAAWC,QAAX,CAAoBS,SAArB,EAAgC,MAAhC,CAAtB;AACA,UAAIU,OAAO,GAAGN,QAAQ,CAAC,KAAKd,KAAL,CAAWC,QAAX,CAAoBS,SAArB,EAAgC,MAAhC,CAAtB;AAEA,aACE,0CACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBE,IAAxB,MADF,EAEE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BH,WAA/B,gBAFF,EAGE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BU,OAA3B,iBAHF,EAIE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BC,OAA3B,iBAJF,EAKE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAE,KAAK1B,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADF;AAWD;AA3DH;;AAAA;AAAA,EAA6BJ,KAAK,CAAC+B,SAAnC;AA8DAzB,OAAO,CAAC0B,YAAR,GAAuB;AACrBrB,EAAAA,QAAQ,EAAE;AADW,CAAvB;AAIA,eAAeT,OAAO,GAAGI,OAAH,CAAtB","sourcesContent":["import React from \"react\";\nimport format from \"date-fns/format\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { deleteWorkout, addExercise  } from \"../actions\";\n\nexport class Workout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      weight: \"\",\n      sets: \"\",\n      reps: \"\",\n      workouts: this.props\n    };\n  }\n\n\n\n  // componentWillUpdate(prevProps) {\n  //   console.log(prevProps, this.props)\n  //   if(this.props.workouts !== prevProps.workouts) {\n  //     let workouts = this.props.workouts\n  //     this.setState({\n  //       workouts\n  //     })\n  //   }\n  // }\n\n  deleteWorkout = e => {\n    this.props.dispatch(deleteWorkout(this.state.workouts.props.id));\n  };\n  //\n  // addExercise(id, exercise) {\n  //   this.props.dispatch(addExercise(this.props.id, this.state));\n  // }\n\n  render() {\n    console.log(this.state.workouts)\n    const exerciseNum = this.state.workouts.exercises.length;\n    const date = format(new Date(this.state.workouts.date), \"MM/DD/YYYY\");\n    // console.log(exerciseNum)\n    // console.log(date)\n    function sumArray(arr, field) {\n      let sum = 0;\n      for (let i = 0; i<arr.length; i++) {\n        sum += arr[i][field];\n      }\n      return sum;\n    }\n    let setsNum = sumArray(this.state.workouts.exercises, 'sets');\n    let repsNum = sumArray(this.state.workouts.exercises, 'reps');\n\n    return (\n      <>\n        <span className=\"date\">{date} </span>\n        <span className=\"exerciseNum\">{exerciseNum} exercises </span>\n        <span className=\"setsNum\">{setsNum} total sets </span>\n        <span className=\"repsNum\">{repsNum} total reps </span>\n        <Button variant=\"danger\" onClick={this.deleteWorkout}>\n          Delete\n        </Button>\n      </>\n    );\n  }\n}\n\nWorkout.defaultProps = {\n  workouts: []\n}\n\nexport default connect()(Workout);\n"]},"metadata":{},"sourceType":"module"}
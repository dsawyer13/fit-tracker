{"ast":null,"code":"import _classCallCheck from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dylan/Desktop/projects/fit-tracker/src/components/Stats.js\";\nimport React from 'react';\n\nvar Stats =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Stats, _React$Component);\n\n  function Stats(props) {\n    var _this;\n\n    _classCallCheck(this, Stats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stats).call(this, props));\n    _this.state = {\n      workouts: []\n    };\n    return _this;\n  }\n\n  _createClass(Stats, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.workouts !== this.props.workouts) {\n        this.setState({\n          workouts: this.props.workouts\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.props.workouts;\n      data.reduce(sumWorkouts, 0);\n\n      function sumWorkouts(sum, workouts) {\n        return sum + workouts.exercises.reduce(sumSubCategories, 0);\n      }\n\n      function sumSubCategories(sum, subCategory) {\n        return sum + subCategory.reps;\n      }\n\n      console.log(data);\n      var totalWorkouts = this.state.workouts.length;\n      return React.createElement(\"div\", {\n        className: \"statsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"totalWorkouts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, totalWorkouts), React.createElement(\"div\", {\n        className: \"totalSets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"totalReps\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"totalPoundage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"favoriteExercise\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bestStreak\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bestLifts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Stats;\n}(React.Component);\n\nexport { Stats as default };","map":{"version":3,"sources":["/home/dylan/Desktop/projects/fit-tracker/src/components/Stats.js"],"names":["React","Stats","props","state","workouts","prevProps","prevState","setState","data","reduce","sumWorkouts","sum","exercises","sumSubCategories","subCategory","reps","console","log","totalWorkouts","length","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFiB;AAKlB;;;;uCAEkBC,S,EAAWC,S,EAAW;AACvC,UAAGA,SAAS,CAACF,QAAV,KAAuB,KAAKF,KAAL,CAAWE,QAArC,EAA+C;AAC7C,aAAKG,QAAL,CAAc;AACZH,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AADT,SAAd;AAGD;AACF;;;6BAEQ;AACP,UAAMI,IAAI,GAAG,KAAKN,KAAL,CAAWE,QAAxB;AAEAI,MAAAA,IAAI,CAACC,MAAL,CAAYC,WAAZ,EAAyB,CAAzB;;AAEA,eAASA,WAAT,CAAqBC,GAArB,EAA0BP,QAA1B,EAAoC;AAClC,eAAOO,GAAG,GAAGP,QAAQ,CAACQ,SAAT,CAAmBH,MAAnB,CAA0BI,gBAA1B,EAA4C,CAA5C,CAAb;AACD;;AAED,eAASA,gBAAT,CAA0BF,GAA1B,EAA+BG,WAA/B,EAA4C;AAC1C,eAAOH,GAAG,GAAGG,WAAW,CAACC,IAAzB;AACD;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,UAAMU,aAAa,GAAG,KAAKf,KAAL,CAAWC,QAAX,CAAoBe,MAA1C;AAKA,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCD,aAAhC,CADF,EAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,CADF;AAaD;;;;EAhDgClB,KAAK,CAACoB,S;;SAApBnB,K","sourcesContent":["import React from 'react';\n\n\nexport default class Stats extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      workouts: []\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.workouts !== this.props.workouts) {\n      this.setState({\n        workouts: this.props.workouts\n      })\n    }\n  }\n\n  render() {\n    const data = this.props.workouts;\n\n    data.reduce(sumWorkouts, 0);\n\n    function sumWorkouts(sum, workouts) {\n      return sum + workouts.exercises.reduce(sumSubCategories, 0)\n    }\n\n    function sumSubCategories(sum, subCategory) {\n      return sum + subCategory.reps\n    }\n\n    console.log(data)\n    const totalWorkouts = this.state.workouts.length;\n\n\n\n\n    return(\n      <div className=\"statsContainer\">\n        <div className=\"totalWorkouts\">{totalWorkouts}</div>\n        <div className=\"totalSets\"></div>\n        <div className=\"totalReps\"></div>\n        <div className=\"totalPoundage\"></div>\n        <div className=\"favoriteExercise\"></div>\n        <div className=\"bestStreak\"></div>\n        <div className=\"bestLifts\">\n          <ul></ul>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
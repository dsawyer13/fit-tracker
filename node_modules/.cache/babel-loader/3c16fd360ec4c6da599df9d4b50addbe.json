{"ast":null,"code":"import _toConsumableArray from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dylan/Desktop/projects/fit-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dylan/Desktop/projects/fit-tracker/src/components/AddWorkoutForm.js\";\nimport React from \"react\";\nimport Exercise from \"./Exercise.js\";\nimport TableForm from \"./TableForm.js\";\nimport { Form, Col, Row, Button, InputGroup, Table } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { groupedOptions } from '../data.js';\n\nvar AddWorkoutForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddWorkoutForm, _React$Component);\n\n  function AddWorkoutForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddWorkoutForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddWorkoutForm).call(this, props));\n\n    _this.setEditing = function () {\n      _this.setState({\n        editing: true\n      });\n    };\n\n    _this.setAdding = function (adding) {\n      _this.setState({\n        adding: adding\n      });\n    };\n\n    _this.displayHead = function () {\n      _this.setState({\n        display: true\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.currentTarget.name, e.currentTarget.value));\n    };\n\n    _this.onSelect = function (optionSelected) {\n      _this.setState({\n        name: optionSelected.label\n      });\n    };\n\n    _this.addWorkout = function (e) {\n      e.preventDefault();\n\n      if (_this.state.exercises && _this.props.onAdd) {\n        _this.props.onAdd(_this.state.exercises);\n      }\n\n      _this.setState({\n        exercises: []\n      });\n    };\n\n    _this.addExercise = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        exercises: [].concat(_toConsumableArray(_this.state.exercises), [{\n          name: _this.state.name,\n          weight: _this.state.weight,\n          sets: _this.state.sets,\n          reps: _this.state.reps\n        }])\n      });\n\n      _this.setState({\n        name: \"\",\n        weight: \"\",\n        sets: \"\",\n        reps: \"\"\n      });\n    };\n\n    _this.deleteExercise = function (index) {\n      var exercises = _this.state.exercises;\n      exercises.splice(index, 1);\n\n      _this.setState({\n        exercises: exercises\n      });\n    };\n\n    _this.state = {\n      adding: false,\n      exercises: [],\n      display: false,\n      editing: false,\n      name: \"\",\n      weight: \"\",\n      sets: \"\",\n      reps: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AddWorkoutForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formatGroupLabel = function formatGroupLabel(data) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, data.label));\n      };\n\n      var exercises = this.state.exercises.map(function (exercise, index) {\n        console.log(index);\n\n        if (!_this2.state.editing) {\n          return React.createElement(\"tr\", {\n            className: \"exercise\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, index + 1), React.createElement(Exercise, Object.assign({\n            key: index\n          }, exercise, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          })), React.createElement(Button, {\n            variant: \"warning\",\n            onClick: _this2.setEditing,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"Edit\"), React.createElement(Button, {\n            variant: \"danger\",\n            onClick: function onClick(index) {\n              return _this2.deleteExercise(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"Delete\"));\n        } else {\n          return React.createElement(React.Fragment, null, React.createElement(TableForm, {\n            name: _this2.state.exercises[index].name,\n            weight: _this2.state.exercises[index].weight,\n            sets: _this2.state.exercises[index].sets,\n            reps: _this2.state.exercises[index].reps,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }));\n        }\n      });\n\n      if (!this.state.adding) {\n        return React.createElement(\"div\", {\n          className: \"add-workout\",\n          onClick: function onClick() {\n            _this2.setAdding(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"+ New Workout\"));\n      }\n\n      var head;\n\n      if (this.state.display) {\n        head = React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"#\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Exercise\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Weight\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"Sets\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Reps\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"Action\")));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"new-workout-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, head, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, exercises)), React.createElement(Form, {\n        onSubmit: this.addExercise,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Exercise\"), React.createElement(Select, {\n        options: groupedOptions,\n        formatGroupLabel: formatGroupLabel,\n        placeholder: \"Exercise...\",\n        name: \"name\",\n        onChange: this.onSelect,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"number\",\n        name: \"weight\",\n        placeholder: \"Weight\",\n        onChange: this.onChange,\n        value: this.state.weight || \"\",\n        required: true,\n        onInput: \"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\",\n        maxLength: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"lbs\"))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Sets\"), React.createElement(Form.Control, {\n        type: \"number\",\n        name: \"sets\",\n        placeholder: \"Sets\",\n        onChange: this.onChange,\n        value: this.state.sets || \"\",\n        required: true,\n        onInput: \"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\",\n        maxLength: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Reps\"), React.createElement(Form.Control, {\n        type: \"number\",\n        name: \"reps\",\n        placeholder: \"Reps\",\n        onChange: this.onChange,\n        value: this.state.reps || \"\",\n        required: true,\n        onInput: \"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\",\n        maxLength: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.displayHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Add Exercise\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"warning\",\n        className: \"cancel-workout\",\n        onClick: function onClick() {\n          _this2.setAdding(false);\n\n          _this2.setState({\n            exercises: [],\n            name: \"\",\n            weight: \"\",\n            sets: \"\",\n            reps: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Cancel Workout\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        size: \"lg\",\n        block: true,\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Finish Workout\"))));\n    }\n  }]);\n\n  return AddWorkoutForm;\n}(React.Component);\n\nexport { AddWorkoutForm as default };\nAddWorkoutForm.defaultProps = {\n  name: \"\",\n  weight: \"\",\n  sets: \"\",\n  reps: \"\"\n};","map":{"version":3,"sources":["/home/dylan/Desktop/projects/fit-tracker/src/components/AddWorkoutForm.js"],"names":["React","Exercise","TableForm","Form","Col","Row","Button","InputGroup","Table","Select","groupedOptions","AddWorkoutForm","props","setEditing","setState","editing","setAdding","adding","displayHead","display","onChange","e","currentTarget","name","value","onSelect","optionSelected","label","addWorkout","preventDefault","state","exercises","onAdd","addExercise","weight","sets","reps","deleteExercise","index","splice","formatGroupLabel","data","map","exercise","console","log","head","onSubmit","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Exercise from \"./Exercise.js\";\nimport TableForm from \"./TableForm.js\";\nimport { Form, Col, Row, Button, InputGroup, Table } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { groupedOptions } from '../data.js';\n\n\nexport default class AddWorkoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      adding: false,\n      exercises: [],\n      display: false,\n      editing: false,\n      name: \"\",\n      weight: \"\",\n      sets: \"\",\n      reps: \"\"\n    };\n  }\n\n  setEditing = () => {\n    this.setState({editing: true});\n  }\n\n  setAdding = adding => {\n    this.setState({\n      adding\n    });\n  };\n\n  displayHead = () => {\n    this.setState({display: true});\n  }\n\n  onChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  onSelect = (optionSelected) => {\n    this.setState({name: optionSelected.label})\n  }\n\n  addWorkout = e => {\n    e.preventDefault();\n    if (this.state.exercises && this.props.onAdd) {\n      this.props.onAdd(this.state.exercises);\n    }\n    this.setState({ exercises: [] });\n  };\n\n  addExercise = e => {\n    e.preventDefault();\n    this.setState({\n      exercises: [\n        ...this.state.exercises,\n        {\n          name: this.state.name,\n          weight: this.state.weight,\n          sets: this.state.sets,\n          reps: this.state.reps\n        }\n      ]\n    });\n    this.setState({ name: \"\", weight: \"\", sets: \"\", reps: \"\" });\n  };\n\n  deleteExercise = index => {\n    const exercises = this.state.exercises;\n    exercises.splice(index, 1);\n    this.setState({ exercises: exercises });\n  };\n\n  render() {\n    const formatGroupLabel = data => (\n      <div>\n        <span>{data.label}</span>\n      </div>\n    );\n\n    const exercises = this.state.exercises.map((exercise, index) => {\n      console.log(index)\n      if (!this.state.editing) {\n        return (<tr className=\"exercise\">\n            <td>{index+1}</td>\n            <Exercise  key={index} {...exercise} />\n            <Button variant=\"warning\" onClick={this.setEditing}>\n              Edit\n            </Button>\n            <Button variant=\"danger\" onClick={index => this.deleteExercise(index)}>\n              Delete\n            </Button>\n          </tr>)\n        } else {\n          return (\n            <>\n              \n              <TableForm\n                name={this.state.exercises[index].name}\n                weight={this.state.exercises[index].weight}\n                sets={this.state.exercises[index].sets}\n                reps={this.state.exercises[index].reps}\n              />\n            </>\n          )\n        }\n      });\n\n    if (!this.state.adding) {\n      return (\n        <div\n          className=\"add-workout\"\n          onClick={() => {\n            this.setAdding(true);\n          }}\n        >\n          <Button variant=\"success\">+ New Workout</Button>\n        </div>\n      );\n    }\n    let head;\n\n    if (this.state.display) {\n      head = (\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Exercise</th>\n            <th>Weight</th>\n            <th>Sets</th>\n            <th>Reps</th>\n            <th>Action</th>\n          </tr>\n        </thead>)\n    }\n\n    return (\n      <div className=\"new-workout-section\">\n        <Table striped bordered hover>\n          {head}\n          <tbody>\n            {exercises}\n          </tbody>\n        </Table>\n        <Form onSubmit={this.addExercise}>\n          <Row>\n            <Col>\n              <Form.Group>\n              <Form.Label>Exercise</Form.Label>\n                <Select\n                  options={groupedOptions}\n                  formatGroupLabel={formatGroupLabel}\n                  placeholder=\"Exercise...\"\n                  name=\"name\"\n                  onChange={this.onSelect}\n                  required\n                 />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Weight</Form.Label>\n                <InputGroup>\n                  <Form.Control type=\"number\" name=\"weight\" placeholder=\"Weight\" onChange={this.onChange} value={this.state.weight || \"\"} required\n                    onInput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"\n                    maxLength=\"5\"/>\n                  <InputGroup.Append>\n                    <InputGroup.Text id=\"inputGroupPrepend\">lbs</InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Sets</Form.Label>\n                <Form.Control type=\"number\" name=\"sets\" placeholder=\"Sets\" onChange={this.onChange} value={this.state.sets || \"\"} required\n                  onInput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"\n                  maxLength=\"5\" />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>Reps</Form.Label>\n                <Form.Control type=\"number\" name=\"reps\" placeholder=\"Reps\" onChange={this.onChange} value={this.state.reps || \"\"} required\n                  onInput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"\n                  maxLength=\"5\"/>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Button variant=\"primary\" type=\"submit\" onClick={this.displayHead}>\n                Add Exercise\n              </Button>\n            </Col>\n            <Col>\n              <Button variant=\"warning\"\n                className=\"cancel-workout\"\n                onClick={() => {\n                  this.setAdding(false);\n                  this.setState({\n                     exercises: [],\n                     name: \"\",\n                     weight: \"\",\n                     sets: \"\",\n                     reps: \"\"\n                   });\n                }}\n              >\n                Cancel Workout\n              </Button>\n            </Col>\n          </Row>\n          <Row>\n            <Button variant=\"primary\" size=\"lg\" block onClick={this.onSubmit}>\n              Finish Workout\n            </Button>\n          </Row>\n        </Form>\n        </div>\n\n\n    );\n  }\n}\n\nAddWorkoutForm.defaultProps = {\n  name: \"\",\n  weight: \"\",\n  sets: \"\",\n  reps: \"\"\n};\n"]},"metadata":{},"sourceType":"module"}